// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReceiptSharing.Api.Models;

#nullable disable

namespace _.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230823121950_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReceiptSharing.Api.Models.Ingredient", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("Optional")
                        .HasColumnType("boolean");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<int?>("ReceiptId")
                        .HasColumnType("integer");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("ReceiptSharing.Api.Models.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxCookDuration")
                        .HasColumnType("integer");

                    b.Property<int>("MinCookDuration")
                        .HasColumnType("integer");

                    b.Property<string[]>("Steps")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("ReceiptSharing.Api.Models.Subscription", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("ReceiptId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "ReceiptId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("ReceiptSharing.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ReceiptSharing.Api.Models.Ingredient", b =>
                {
                    b.HasOne("ReceiptSharing.Api.Models.Receipt", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("ReceiptId");
                });

            modelBuilder.Entity("ReceiptSharing.Api.Models.Receipt", b =>
                {
                    b.HasOne("ReceiptSharing.Api.Models.User", "User")
                        .WithMany("Receipts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReceiptSharing.Api.Models.Subscription", b =>
                {
                    b.HasOne("ReceiptSharing.Api.Models.Receipt", "Receipt")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReceiptSharing.Api.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReceiptSharing.Api.Models.Receipt", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("ReceiptSharing.Api.Models.User", b =>
                {
                    b.Navigation("Receipts");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
