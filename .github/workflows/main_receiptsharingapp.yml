# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - ReceiptSharingApp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  install-ef-tool: # Add a new job for installing EF tool
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true

      
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true

      - name: Install EF tool
        run: dotnet tool install --global dotnet-ef

      - name: Generate SQL Script
        run: dotnet ef migrations script --idempotent --project ReceiptSharing.Api/ReceiptSharing.Api.csproj --output $(System.ArtifactsDirectory)/script.sql

      - name: Update Database
        uses: azure/sql-action@v1
        with:
          azureSubscription: '<Service Connection Identifier>'
          AuthenticationType: 'connectionString'
          ConnectionString: '${{ secrets.DB_CONNECTION_STRING }}'
          deployType: 'SqlTask'
          SqlFile: '$(System.ArtifactsDirectory)/script.sql'

      - name: Publish Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.artifactName }}
          path: $(System.ArtifactsDirectory)/script.sql

      - name: Build with dotnet
        run: dotnet build ReceiptSharing.Api/ReceiptSharing.Api.csproj --configuration Release

      - name: dotnet publish
        run: dotnet publish ReceiptSharing.Api/ReceiptSharing.Api.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'ReceiptSharingApp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_0F1449825B1D46258FA8A13B45CA2F6E }}
          package: .
